<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>